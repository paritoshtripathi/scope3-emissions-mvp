FROM python:3.10-slim

WORKDIR /app

# Install OS dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    gfortran \
    libopenblas-dev \
    liblapack-dev \
    libffi-dev \
    libpq-dev \
    git \
    curl \
 && rm -rf /var/lib/apt/lists/*

# Upgrade pip, setuptools, wheel
RUN pip install --upgrade pip setuptools wheel

# Copy requirements and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Create necessary directories
RUN mkdir -p /app/kb/vectors /app/kb/documents /app/kb/metadata /app/kb/cache

# Copy source code and config files
COPY . .

# Set environment variables
ENV PYTHONPATH=/app \
    DOCUMENT_MODEL=sentence-transformers/all-mpnet-base-v2 \
    CHUNK_MODEL=sentence-transformers/all-MiniLM-L6-v2 \
    SEMANTIC_MODEL=sentence-transformers/paraphrase-multilingual-mpnet-base-v2 \
    FAISS_INDEX_TYPE=IVFFlat \
    VECTOR_DIMENSION=768 \
    KB_STORAGE_DIR=/app/kb \
    PORT=5000 \
    FLASK_APP=src.rag.api.app:app \
    FLASK_ENV=development \
    FLASK_DEBUG=1

# Debug: Print directory structure and verify app.py location
RUN echo "=== Directory Structure ===" && \
    ls -R /app/src/rag/api && \
    echo "=== Checking app.py existence ===" && \
    find /app -name "app.py" && \
    echo "=== Python path ===" && \
    python -c "import sys; print('\n'.join(sys.path))"

# Expose port
EXPOSE 5000

# Run the app with Python directly
CMD ["python", "run.py"]