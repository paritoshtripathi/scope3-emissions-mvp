FROM python:3.10-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy only the requirements file first
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Pre-download NLTK data
RUN python -m nltk.downloader -d /usr/local/share/nltk_data \
    punkt \
    punkt_tab \
    averaged_perceptron_tagger \
    maxent_ne_chunker \
    words \
    stopwords \
    wordnet

# Copy the entire src directory to ensure all modules are available
COPY src/ ./src/

# Create necessary directories
RUN mkdir -p \
    /app/models/faiss_index \
    /app/logs \
    /app/uploads \
    /app/kb

# Set environment variables
ENV PYTHONPATH=/app
ENV FLASK_APP=src.rag.api.app
ENV FLASK_ENV=development
ENV PYTHONUNBUFFERED=1
ENV NLTK_DATA=/usr/local/share/nltk_data

# Initialize base models
RUN python -c "\
from src.rag.embeddings.document_embedder import MultiLevelEmbedder; \
from src.rag.retrieval.multi_vector_retriever import MultiVectorRetriever; \
embedder = MultiLevelEmbedder(); \
retriever = MultiVectorRetriever();"

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:5000/api/rag/health || exit 1

# Start Flask
CMD ["python", "-m", "flask", "run", "--host=0.0.0.0", "--port=5000"]